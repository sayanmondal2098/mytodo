{"version":3,"sources":["assect/image/404.jpg","app/component/Home.js","app/component/Root.js","app/component/User.js","app/component/Weather.js","app/ui/ErrorPage.js","app/ui/Footer.js","app/route/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","state","posts","fetch","method","then","response","json","setState","console","log","className","columns","Header","accessor","data","this","React","Component","Root","userId","id","title","completed","User","Weather","city","country","lon","undefined","lat","icon","main","description","celsius","temp_max","temp_min","pressure","humidity","wind_speed","visibility","rain","clouds","error","handleCityChange","bind","handleCountryChange","getWeather","temp","Math","floor","event","target","value","e","preventDefault","name","sys","coord","weather","calCelsius","wind","speed","all","errorInfo","imgsrc","Redirect","onSubmit","type","placeholder","onChange","src","ErrorPage","BG","Footer","href","rel","Navigation","to","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f3c57c64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.142b6cae.jpg\";","import React from 'react';\nimport ReactTable from 'react-table-6';\nimport 'react-table-6/react-table.css';\n// import \"react-table/react-table.css\"\n// import '../../assect/css/mycss.css'\n\nclass Home extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            posts : []\n        };\n\n    }\n\n    componentDidMount(){\n        const url = \"https://jsonplaceholder.typicode.com/posts\";\n        fetch(url, {\n            method: \"GET\",\n        }).then(response => response.json())\n          .then(posts => \n            this.setState({posts : posts,\n            },console.log(posts))\n        )\n    }\n\n    render(){\n        const columns = [{  \n            Header: 'userId',  \n            accessor: 'userId'  \n           },{  \n           Header: 'id',  \n           accessor: 'id'  \n           },\n           {  \n           Header: 'title',  \n           accessor: 'title'  \n            },\n            {  \n           Header: 'body',  \n           accessor: 'body'  \n                }\n        ]  \n     \n        return(\n            <div className=\"container\">\n                <ReactTable\n                columns={columns}\n                data = {this.state.posts} >\n\n                </ReactTable>\n            </div>\n        );\n    }\n}\n\nexport default Home ;","import React from 'react';\n// import logo from '../../logo.svg';\n\n\nclass Root extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            userId : [],\n            id: [],\n            title : [],\n            completed: []\n          }\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n        .then(response => response.json())\n        // .then(json => console.log(json))\n        .then(data => this.setState({userId: data.userId, title: data.title , id: data.id , completed: data.completed}))\n    \n      }\n    render(){\n        const {userId, title , id, completed} = this.state;\n        return(\n            <div className=\"App\">\n            <header className=\"App-header\">\n              <div>\n                <h1>UserId</h1>\n                {userId}\n              </div>\n              <div>\n                <h1>completed</h1>\n                {completed}\n              </div>\n              <div>\n                <h1>Id</h1>\n                {id}\n              </div>\n              <div>\n                <h1>title</h1>\n                {title}\n              </div>\n              \n            </header>\n          </div>\n        );\n    }\n}\n\nexport default Root ;","import React from 'react';\n\nclass User extends React.Component{\n    render(){\n        return(\n            <div className=\"container\">\n                <h1>\n                    Hello from user\n                </h1>\n            </div>\n        );\n    }\n}\n\nexport default User ;","import React from 'react';\n// import { } from 'bootstrap';\n// import GetWeather from '../component/GetWeather';\nimport '../../assect/css/mycss.css'\nimport { Redirect } from 'react-router-dom';\n\n\nclass Weather extends React.Component{\n    constructor(props){\n        super(props);\n\n\n        this.state = {\n            city: '',\n            country: '',\n            lon : undefined,\n            lat : undefined,\n            icon: undefined,\n            main: undefined,\n            description: undefined,\n            celsius: undefined,\n            temp_max : undefined,\n            temp_min : undefined,\n            pressure : undefined,\n            humidity : undefined,\n            wind_speed : undefined,\n            visibility : undefined,\n            rain : undefined,\n            clouds : undefined,\n            error : false\n          };\n              \n        this.handleCityChange = this.handleCityChange.bind(this);\n        this.handleCountryChange = this.handleCountryChange.bind(this);\n        this.getWeather = this.getWeather.bind(this);\n\n    }\n\n\n\n    calCelsius(temp){\n        let cell = Math.floor(temp - 273.15);\n        return cell\n    }\n\n    handleCityChange(event) {\n        this.setState({city: event.target.value});\n      }\n\n      handleCountryChange(event) {\n        this.setState({country : event.target.value});\n      }\n\n    getWeather(e){\n        e.preventDefault();\n        // console.log(city+\" \"+country)\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=f1f66ef328ad5089cd48bdf7d7cb81f6`)\n        .then(response => response.json())\n        .then(data => this.setState({\n            city: data.name, \n            country: data.sys.country,\n            lon : data.coord.lon,\n            lat : data.coord.lat,\n            icon: data.weather[0].icon,\n            main: data.weather[0].main,\n            description : data.weather[0].description,\n            celsius : this.calCelsius(data.main.temp),\n            temp_min : this.calCelsius(data.main.temp_min),\n            temp_max : this.calCelsius(data.main.temp_max),\n            pressure : data.main.pressure,\n            humidity : data.main.humidity,\n            visibility : data.visibility,\n            wind_speed : data.wind.speed,\n            clouds : data.clouds.all,\n        },\n             console.log(data),\n             (error)=>{\n                this.setState({\n                 \n                  error : true\n                });\n              }))\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n        this.setState({ error: true });\n\n      }\n\n\n\n\n    render(){\n        const {city, country    ,lon, lat,  icon , main , description, celsius, temp_max, temp_min, pressure,\n                     humidity, visibility ,wind_speed,rain, clouds, error} = this.state;\n        const imgsrc= `http://openweathermap.org/img/wn/${icon}@2x.png`;\n        if (error) {\n            Redirect('https://google.com')\n          } \n        return(\n            \n            \n            <div className=\"App\">\n                \n            <header className=\"App-header\">\n            <form onSubmit={this.getWeather}>\n            <input  type=\"text\"\n                name=\"city\" \n                placeholder=\"Enter City Name...\" \n                value={this.state.city}\n                onChange={this.handleCityChange}/>\n                \n\t\t    <input type=\"text\" name=\"country\" placeholder=\"Country Name (Optional)...\"\n            value={this.state.country}\n            onChange={this.handleCountryChange}\n            />\n\t\t    <button>Get Weather</button>\n\t        </form>\n              <h1>\n                  { country}\n                  </h1>   \n                  <h4>\n                  { city}\n                  </h4>   \n                  <img src = {imgsrc}/>    \n                <h4>\n                      {celsius} <br /> {description} <br /> {visibility} <br /> {clouds}\n                </h4>       \n            </header>\n          </div>\n        );\n    }\n}\n\nexport default Weather ;\n\n\n// f1f66ef328ad5089cd48bdf7d7cb81f6","import React from 'react';\nimport '../../assect/css/mycss.css';\nimport BG from '../../assect/image/404.jpg'\n\nclass ErrorPage extends React.Component{\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"error\">\n                    <img src={BG} className=\"error\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ErrorPage;","import React from 'react';\nimport {FaInstagram, FaLinkedinIn, FaLinkedin, FaFacebook, FaMailBulk} from 'react-icons/fa';\nimport {  FiMail } from 'react-icons/fi';\nimport '../../assect/css/mycss.css';\n\nclass Footer extends React.Component{\n    render(){\n        return(\n            <div>\n            <div className=\"footer\">\n            <p>\n                    2, MY ADDRESS \n                    SALTLAKE, KOLKATA\n                    PIN - 700067\n                </p>\n                <div>\n                <a href=\"http://www.google.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FaInstagram />\n                </a>\n                <a href=\"http://www.facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FaFacebook />\n                </a>\n                <a href=\"http://www.linkedin.com/in\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FaLinkedinIn />\n                </a>\n                <a href=\"http://www.gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FiMail />\n                </a>\n            \n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nimport '../../assect/css/mycss.css';\nimport { FaHome, FaRoad, FaUser } from 'react-icons/fa';\n\nclass Navigation extends React.Component{\n    render(){\n        return(\n            <dev className=\"sidenav\">\n                <ul>\n                <li className=\"sidenav_ul\">\n                    <FaHome /><NavLink to=\"/home\">Home</NavLink></li>\n                <li className=\"sidenav_ul\">\n                    <FaUser/>\n                    <NavLink to=\"/user\">User</NavLink></li>\n                <li className=\"sidenav_ul\">\n                    <FaRoad />\n                    <NavLink to=\"/root\">Root</NavLink></li>\n                <li className=\"sidenav_ul\">\n                    <FaRoad />\n                    <NavLink to=\"/weather\">Weather</NavLink></li>\n                </ul>\n\n            </dev>\n        );\n    }\n}\n\nexport default Navigation;","import React from 'react';\nimport { BrowserRouter , Route , Switch } from 'react-router-dom';\nimport Home from \"./app/component/Home\";\nimport Root from \"./app/component/Root\";\nimport User from \"./app/component/User\";\nimport Weather from \"./app/component/Weather\";\n\nimport ErrorPage from './app/ui/ErrorPage';\nimport Footer from './app/ui/Footer';\n\nimport Navigation from './app/route/Navigation';\n\nimport './App.css';\n\nclass App extends React.Component {\n  render(){\n    return (\n\n      <BrowserRouter>\n      <Navigation />\n      <Switch>\n      <Route path=\"/home\" component={Home}/>\n      <Route path=\"/user\" component={User}/>\n      <Route path=\"/root\" component={Root}/>\n      <Route path=\"/weather\" component={Weather}/>\n      <Route component={ErrorPage} />\n      </Switch>\n      <Footer />\n      </BrowserRouter>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}