{"ast":null,"code":"var _jsxFileName = \"/Users/sayanmondal/Code/react/mytodo/src/app/component/Weather.js\";\nimport React from 'react'; // import { } from 'bootstrap';\n// import GetWeather from '../component/GetWeather';\n\nimport '../../assect/css/mycss.css';\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      country: '',\n      lon: undefined,\n      lat: undefined,\n      icon: undefined,\n      main: undefined,\n      description: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      pressure: undefined,\n      humidity: undefined,\n      wind_speed: undefined,\n      visibility: undefined,\n      rain: undefined,\n      clouds: undefined,\n      error: false\n    };\n    this.handleCityChange = this.handleCityChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather(e) {\n    e.preventDefault(); // console.log(city+\" \"+country)\n\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=f1f66ef328ad5089cd48bdf7d7cb81f6`).then(response => response.json()).then(data => this.setState({\n      city: data.name,\n      country: data.sys.country,\n      lon: data.coord.lon,\n      lat: data.coord.lat,\n      icon: data.weather[0].icon,\n      main: data.weather[0].main,\n      description: data.weather[0].description,\n      celsius: this.calCelsius(data.main.temp),\n      temp_min: this.calCelsius(data.main.temp_min),\n      temp_max: this.calCelsius(data.main.temp_max),\n      pressure: data.main.pressure,\n      humidity: data.main.humidity,\n      visibility: data.visibility,\n      wind_speed: data.wind.speed,\n      // rain : data.rain[1],\n      clouds: data.clouds.all\n    }, console.log(data)));\n  }\n\n  handleCityChange(event) {\n    this.setState({\n      city: event.target.value\n    });\n  }\n\n  handleCountryChange(event) {\n    this.setState({\n      country: event.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=f1f66ef328ad5089cd48bdf7d7cb81f6`).then(response => response.json()).then(data => this.setState({\n      city: data.name,\n      country: data.sys.country,\n      lon: data.coord.lon,\n      lat: data.coord.lat,\n      icon: data.weather[0].icon,\n      main: data.weather[0].main,\n      description: data.weather[0].description,\n      celsius: this.calCelsius(data.main.temp),\n      temp_min: this.calCelsius(data.main.temp_min),\n      temp_max: this.calCelsius(data.main.temp_max),\n      pressure: data.main.pressure,\n      humidity: data.main.humidity,\n      visibility: data.visibility,\n      wind_speed: data.wind.speed,\n      // rain : data.rain[1],\n      clouds: data.clouds.all\n    }, console.log(data)));\n  }\n\n  render() {\n    const {\n      city,\n      country,\n      lon,\n      lat,\n      icon,\n      main,\n      description,\n      celsius,\n      temp_max,\n      temp_min,\n      pressure,\n      humidity,\n      visibility,\n      wind_speed,\n      rain,\n      clouds,\n      error\n    } = this.state;\n    const imgsrc = `http://openweathermap.org/img/wn/${icon}@2x.png`;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      placeholder: \"City...\",\n      value: this.state.city,\n      onChange: this.handleCityChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"country\",\n      placeholder: \"Country...\",\n      value: this.state.country,\n      onChange: this.handleCountryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Get Weather\")), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, country), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, city), React.createElement(\"img\", {\n      src: imgsrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, celsius, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), \" \", description, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), \" \", visibility, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), \" \", clouds)));\n  }\n\n}\n\nexport default Weather; // f1f66ef328ad5089cd48bdf7d7cb81f6","map":{"version":3,"sources":["/Users/sayanmondal/Code/react/mytodo/src/app/component/Weather.js"],"names":["React","Weather","Component","constructor","props","state","city","country","lon","undefined","lat","icon","main","description","celsius","temp_max","temp_min","pressure","humidity","wind_speed","visibility","rain","clouds","error","handleCityChange","bind","handleCountryChange","handleSubmit","calCelsius","temp","cell","Math","floor","getWeather","e","preventDefault","fetch","then","response","json","data","setState","name","sys","coord","weather","wind","speed","all","console","log","event","target","value","render","imgsrc"],"mappings":"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","sourcesContent":["import React from 'react';\n// import { } from 'bootstrap';\n// import GetWeather from '../component/GetWeather';\nimport '../../assect/css/mycss.css'\n\n\nclass Weather extends React.Component{\n    constructor(props){\n        super(props);\n\n\n        this.state = {\n            city: '',\n            country: '',\n            lon : undefined,\n            lat : undefined,\n            icon: undefined,\n            main: undefined,\n            description: undefined,\n            celsius: undefined,\n            temp_max : undefined,\n            temp_min : undefined,\n            pressure : undefined,\n            humidity : undefined,\n            wind_speed : undefined,\n            visibility : undefined,\n            rain : undefined,\n            clouds : undefined,\n            error : false\n          };\n              \n        this.handleCityChange = this.handleCityChange.bind(this);\n        this.handleCountryChange = this.handleCountryChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n\n    calCelsius(temp){\n        let cell = Math.floor(temp - 273.15);\n        return cell\n    }\n\n    getWeather(e){\n        e.preventDefault();\n        // console.log(city+\" \"+country)\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=f1f66ef328ad5089cd48bdf7d7cb81f6`)\n        .then(response => response.json())\n        .then(data => this.setState({\n            city: data.name, \n            country: data.sys.country,\n            lon : data.coord.lon,\n            lat : data.coord.lat,\n            icon: data.weather[0].icon,\n            main: data.weather[0].main,\n            description : data.weather[0].description,\n            celsius : this.calCelsius(data.main.temp),\n            temp_min : this.calCelsius(data.main.temp_min),\n            temp_max : this.calCelsius(data.main.temp_max),\n            pressure : data.main.pressure,\n            humidity : data.main.humidity,\n            visibility : data.visibility,\n            wind_speed : data.wind.speed,\n\n            // rain : data.rain[1],\n            clouds : data.clouds.all,\n\n            \n\n        },\n             console.log(data)))\n    }\n\n      handleCityChange(event) {\n        this.setState({city: event.target.value});\n      }\n\n      handleCountryChange(event) {\n        this.setState({country : event.target.value\n\n            });\n      }\n    \n      handleSubmit(e) {\n        e.preventDefault();\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=f1f66ef328ad5089cd48bdf7d7cb81f6`)\n        .then(response => response.json())\n        .then(data => this.setState({\n            city: data.name, \n            country: data.sys.country,\n            lon : data.coord.lon,\n            lat : data.coord.lat,\n            icon: data.weather[0].icon,\n            main: data.weather[0].main,\n            description : data.weather[0].description,\n            celsius : this.calCelsius(data.main.temp),\n            temp_min : this.calCelsius(data.main.temp_min),\n            temp_max : this.calCelsius(data.main.temp_max),\n            pressure : data.main.pressure,\n            humidity : data.main.humidity,\n            visibility : data.visibility,\n            wind_speed : data.wind.speed,\n\n            // rain : data.rain[1],\n            clouds : data.clouds.all,\n\n            \n\n        },\n             console.log(data)))\n    }\n\n\n    render(){\n        const {city, country    ,lon, lat,  icon , main , description, celsius, temp_max, temp_min, pressure,\n                     humidity, visibility ,wind_speed,rain, clouds, error} = this.state;\n        const imgsrc= `http://openweathermap.org/img/wn/${icon}@2x.png`;\n        return(\n            \n            <div className=\"App\">\n                \n            <header className=\"App-header\">\n            <form onSubmit={this.getWeather}>\n            <input  type=\"text\"\n                name=\"city\" \n                placeholder=\"City...\" \n                value={this.state.city}\n                onChange={this.handleCityChange}/>\n                \n\t\t    <input type=\"text\" name=\"country\" placeholder=\"Country...\"\n            value={this.state.country}\n            onChange={this.handleCountryChange}\n            />\n\t\t    <button>Get Weather</button>\n\t        </form>\n              <h1>\n                  { country}\n                  </h1>   \n                  <h4>\n                  { city}\n                  </h4>   \n                  <img src = {imgsrc}/>    \n                <h4>\n                      {celsius} <br /> {description} <br /> {visibility} <br /> {clouds}\n                </h4>       \n            </header>\n          </div>\n        );\n    }\n}\n\nexport default Weather ;\n\n\n// f1f66ef328ad5089cd48bdf7d7cb81f6"]},"metadata":{},"sourceType":"module"}