{"ast":null,"code":"var _jsxFileName = \"/Users/sayanmondal/Code/react/mytodo/src/app/component/User.js\";\nimport React from 'react';\nimport '../../assect/css/mycss.css';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.handleUsernameChange = this.handleCityChange.bind(this);\n    this.handlePasswordChange = this.handleCountryChange.bind(this);\n    this.getWeather = this.getWeather.bind(this);\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  handleUsernameChange(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  getWeather(e) {\n    e.preventDefault(); // console.log(city+\" \"+country)\n\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=f1f66ef328ad5089cd48bdf7d7cb81f6`).then(response => response.json()).then(data => this.setState({\n      city: data.name,\n      country: data.sys.country,\n      lon: data.coord.lon,\n      lat: data.coord.lat,\n      icon: data.weather[0].icon,\n      main: data.weather[0].main,\n      description: data.weather[0].description,\n      celsius: this.calCelsius(data.main.temp),\n      temp_min: this.calCelsius(data.main.temp_min),\n      temp_max: this.calCelsius(data.main.temp_max),\n      pressure: data.main.pressure,\n      humidity: data.main.humidity,\n      visibility: data.visibility,\n      wind_speed: data.wind.speed,\n      clouds: data.clouds.all\n    }, console.log(data), error => {\n      this.setState({\n        error: true\n      });\n    }));\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    this.setState({\n      error: true\n    });\n  }\n\n  render() {\n    const {\n      city,\n      country,\n      lon,\n      lat,\n      icon,\n      main,\n      description,\n      celsius,\n      temp_max,\n      temp_min,\n      pressure,\n      humidity,\n      visibility,\n      wind_speed,\n      rain,\n      clouds,\n      error\n    } = this.state;\n    const imgsrc = `http://openweathermap.org/img/wn/${icon}@2x.png`;\n\n    if (error) {\n      Redirect('https://google.com');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      placeholder: \"Enter City Name...\",\n      value: this.state.city,\n      onChange: this.handleCityChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"country\",\n      placeholder: \"Country Name (Optional)...\",\n      value: this.state.country,\n      onChange: this.handleCountryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Get Weather\")), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, country), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, city), React.createElement(\"img\", {\n      src: imgsrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, celsius, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), \" \", description, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), \" \", visibility, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), \" \", clouds)));\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/sayanmondal/Code/react/mytodo/src/app/component/User.js"],"names":["React","Redirect","axios","User","Component","constructor","props","state","username","password","handleUsernameChange","handleCityChange","bind","handlePasswordChange","handleCountryChange","getWeather","calCelsius","temp","cell","Math","floor","event","setState","target","value","e","preventDefault","fetch","city","then","response","json","data","name","country","sys","lon","coord","lat","icon","weather","main","description","celsius","temp_min","temp_max","pressure","humidity","visibility","wind_speed","wind","speed","clouds","all","console","log","error","componentDidCatch","errorInfo","render","rain","imgsrc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,4BAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAGA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAKA,SAAKC,oBAAL,GAA4B,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAA5B;AACA,SAAKC,oBAAL,GAA4B,KAAKC,mBAAL,CAAyBF,IAAzB,CAA8B,IAA9B,CAA5B;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AAEH;;AAIDI,EAAAA,UAAU,CAACC,IAAD,EAAM;AACZ,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,MAAlB,CAAX;AACA,WAAOC,IAAP;AACH;;AAEDR,EAAAA,oBAAoB,CAACW,KAAD,EAAQ;AACxB,SAAKC,QAAL,CAAc;AAACd,MAAAA,QAAQ,EAAEa,KAAK,CAACE,MAAN,CAAaC;AAAxB,KAAd;AACD;;AAEDX,EAAAA,oBAAoB,CAACQ,KAAD,EAAQ;AAC1B,SAAKC,QAAL,CAAc;AAACb,MAAAA,QAAQ,EAAGY,KAAK,CAACE,MAAN,CAAaC;AAAzB,KAAd;AACD;;AAEHT,EAAAA,UAAU,CAACU,CAAD,EAAG;AACTA,IAAAA,CAAC,CAACC,cAAF,GADS,CAET;;AACAC,IAAAA,KAAK,CAAE,qDAAoD,KAAKpB,KAAL,CAAWqB,IAAK,yCAAtE,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKV,QAAL,CAAc;AACxBM,MAAAA,IAAI,EAAEI,IAAI,CAACC,IADa;AAExBC,MAAAA,OAAO,EAAEF,IAAI,CAACG,GAAL,CAASD,OAFM;AAGxBE,MAAAA,GAAG,EAAGJ,IAAI,CAACK,KAAL,CAAWD,GAHO;AAIxBE,MAAAA,GAAG,EAAGN,IAAI,CAACK,KAAL,CAAWC,GAJO;AAKxBC,MAAAA,IAAI,EAAEP,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBD,IALE;AAMxBE,MAAAA,IAAI,EAAET,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBC,IANE;AAOxBC,MAAAA,WAAW,EAAGV,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBE,WAPN;AAQxBC,MAAAA,OAAO,EAAG,KAAK3B,UAAL,CAAgBgB,IAAI,CAACS,IAAL,CAAUxB,IAA1B,CARc;AASxB2B,MAAAA,QAAQ,EAAG,KAAK5B,UAAL,CAAgBgB,IAAI,CAACS,IAAL,CAAUG,QAA1B,CATa;AAUxBC,MAAAA,QAAQ,EAAG,KAAK7B,UAAL,CAAgBgB,IAAI,CAACS,IAAL,CAAUI,QAA1B,CAVa;AAWxBC,MAAAA,QAAQ,EAAGd,IAAI,CAACS,IAAL,CAAUK,QAXG;AAYxBC,MAAAA,QAAQ,EAAGf,IAAI,CAACS,IAAL,CAAUM,QAZG;AAaxBC,MAAAA,UAAU,EAAGhB,IAAI,CAACgB,UAbM;AAcxBC,MAAAA,UAAU,EAAGjB,IAAI,CAACkB,IAAL,CAAUC,KAdC;AAexBC,MAAAA,MAAM,EAAGpB,IAAI,CAACoB,MAAL,CAAYC;AAfG,KAAd,EAiBTC,OAAO,CAACC,GAAR,CAAYvB,IAAZ,CAjBS,EAkBRwB,KAAD,IAAS;AACN,WAAKlC,QAAL,CAAc;AAEZkC,QAAAA,KAAK,EAAG;AAFI,OAAd;AAID,KAvBO,CAFd;AA0BH;;AAEDC,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,SAAR,EAAmB;AAChC;AACA,SAAKpC,QAAL,CAAc;AAAEkC,MAAAA,KAAK,EAAE;AAAT,KAAd;AAED;;AAKHG,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAC/B,MAAAA,IAAD;AAAOM,MAAAA,OAAP;AAAmBE,MAAAA,GAAnB;AAAwBE,MAAAA,GAAxB;AAA8BC,MAAAA,IAA9B;AAAqCE,MAAAA,IAArC;AAA4CC,MAAAA,WAA5C;AAAyDC,MAAAA,OAAzD;AAAkEE,MAAAA,QAAlE;AAA4ED,MAAAA,QAA5E;AAAsFE,MAAAA,QAAtF;AACOC,MAAAA,QADP;AACiBC,MAAAA,UADjB;AAC6BC,MAAAA,UAD7B;AACwCW,MAAAA,IADxC;AAC8CR,MAAAA,MAD9C;AACsDI,MAAAA;AADtD,QAC+D,KAAKjD,KAD1E;AAEA,UAAMsD,MAAM,GAAG,oCAAmCtB,IAAK,SAAvD;;AACA,QAAIiB,KAAJ,EAAW;AACPvD,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACD;;AACH,WAGI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,QAAQ,EAAE,KAAKc,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,IAAI,EAAC,MAAb;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,oBAFhB;AAGI,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWqB,IAHtB;AAII,MAAA,QAAQ,EAAE,KAAKjB,gBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAON;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAkC,MAAA,WAAW,EAAC,4BAA9C;AACM,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAW2B,OADxB;AAEM,MAAA,QAAQ,EAAE,KAAKpB,mBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPM,EAWN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXM,CADA,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMoB,OADN,CAdF,EAiBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEN,IADF,CAjBN,EAoBM;AAAK,MAAA,GAAG,EAAIiC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBN,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACOlB,OADP,OACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhB,OACwBD,WADxB,OACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADrC,OAC6CM,UAD7C,OACyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzD,OACiEI,MADjE,CArBJ,CAFA,CAHJ;AAgCH;;AA9G6B;;AAkHlC,eAAejD,IAAf","sourcesContent":["import React from 'react';\n\nimport '../../assect/css/mycss.css'\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\n\nclass User extends React.Component{\n    constructor(props){\n        super(props);\n\n\n        this.state = {\n            username: '',\n            password: '',\n          };\n              \n        this.handleUsernameChange = this.handleCityChange.bind(this);\n        this.handlePasswordChange = this.handleCountryChange.bind(this);\n        this.getWeather = this.getWeather.bind(this);\n\n    }\n\n\n\n    calCelsius(temp){\n        let cell = Math.floor(temp - 273.15);\n        return cell\n    }\n\n    handleUsernameChange(event) {\n        this.setState({username: event.target.value});\n      }\n\n      handlePasswordChange(event) {\n        this.setState({password : event.target.value});\n      }\n\n    getWeather(e){\n        e.preventDefault();\n        // console.log(city+\" \"+country)\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=f1f66ef328ad5089cd48bdf7d7cb81f6`)\n        .then(response => response.json())\n        .then(data => this.setState({\n            city: data.name, \n            country: data.sys.country,\n            lon : data.coord.lon,\n            lat : data.coord.lat,\n            icon: data.weather[0].icon,\n            main: data.weather[0].main,\n            description : data.weather[0].description,\n            celsius : this.calCelsius(data.main.temp),\n            temp_min : this.calCelsius(data.main.temp_min),\n            temp_max : this.calCelsius(data.main.temp_max),\n            pressure : data.main.pressure,\n            humidity : data.main.humidity,\n            visibility : data.visibility,\n            wind_speed : data.wind.speed,\n            clouds : data.clouds.all,\n        },\n             console.log(data),\n             (error)=>{\n                this.setState({\n                 \n                  error : true\n                });\n              }))\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n        this.setState({ error: true });\n\n      }\n\n\n\n\n    render(){\n        const {city, country    ,lon, lat,  icon , main , description, celsius, temp_max, temp_min, pressure,\n                     humidity, visibility ,wind_speed,rain, clouds, error} = this.state;\n        const imgsrc= `http://openweathermap.org/img/wn/${icon}@2x.png`;\n        if (error) {\n            Redirect('https://google.com')\n          } \n        return(\n            \n            \n            <div className=\"App\">\n                \n            <header className=\"App-header\">\n            <form onSubmit={this.getWeather}>\n            <input  type=\"text\"\n                name=\"city\" \n                placeholder=\"Enter City Name...\" \n                value={this.state.city}\n                onChange={this.handleCityChange}/>\n                \n\t\t    <input type=\"text\" name=\"country\" placeholder=\"Country Name (Optional)...\"\n            value={this.state.country}\n            onChange={this.handleCountryChange}\n            />\n\t\t    <button>Get Weather</button>\n\t        </form>\n              <h1>\n                  { country}\n                  </h1>   \n                  <h4>\n                  { city}\n                  </h4>   \n                  <img src = {imgsrc}/>    \n                <h4>\n                      {celsius} <br /> {description} <br /> {visibility} <br /> {clouds}\n                </h4>       \n            </header>\n          </div>\n        );\n    }\n}\n\n\nexport default User ;"]},"metadata":{},"sourceType":"module"}