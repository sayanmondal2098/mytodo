{"ast":null,"code":"var _jsxFileName = \"/Users/sayanmondal/Code/react/mytodo/src/app/component/Weather.js\";\nimport React from 'react'; // import { } from 'bootstrap';\n\nimport '../../assect/css/mycss.css'; // var api_key = f1f66ef328ad5089cd48bdf7d7cb81f6;\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: undefined,\n      country: undefined,\n      lon: undefined,\n      lat: undefined,\n      icon: undefined,\n      main: undefined,\n      description: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      pressure: undefined,\n      humidity: undefined,\n      wind_speed: undefined,\n      visibility: undefined,\n      rain: undefined,\n      clouds: undefined,\n      error: false\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = temp - 273.15;\n    return cell;\n  }\n\n  componentDidMount() {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=f1f66ef328ad5089cd48bdf7d7cb81f6`).then(response => response.json()).then(data => this.setState({\n      city: data.name,\n      country: data.sys.country,\n      lon: data.coord.lon,\n      lat: data.coord.lat,\n      icon: data.weather[0].icon,\n      main: data.weather[0].main,\n      description: data.weather[0].description,\n      celsius: data.main.temp,\n      temp_min: data.main.temp_min,\n      temp_max: data.main.temp_max,\n      pressure: data.main.pressure,\n      humidity: data.main.humidity,\n      visibility: data.visibility,\n      wind_speed: data.wind.speed,\n      rain: data.rain[1],\n      clouds: data.clouds.all\n    }, console.log(data)));\n  }\n\n  render() {\n    const {\n      city,\n      country,\n      lon,\n      lat,\n      icon,\n      main,\n      description,\n      celsius,\n      temp_max,\n      temp_min,\n      pressure,\n      humidity,\n      visibility,\n      wind_speed,\n      rain,\n      clouds,\n      error\n    } = this.state;\n    const imgsrc = `http://openweathermap.org/img/wn/${icon}@2x.png`;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, country), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, city), React.createElement(\"img\", {\n      src: imgsrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, celsius, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), \" \", description, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), \" \", visibility, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), \" \", clouds)));\n  }\n\n}\n\nexport default Weather; // f1f66ef328ad5089cd48bdf7d7cb81f6","map":{"version":3,"sources":["/Users/sayanmondal/Code/react/mytodo/src/app/component/Weather.js"],"names":["React","Weather","Component","constructor","props","state","city","undefined","country","lon","lat","icon","main","description","celsius","temp_max","temp_min","pressure","humidity","wind_speed","visibility","rain","clouds","error","calCelsius","temp","cell","componentDidMount","fetch","then","response","json","data","setState","name","sys","coord","weather","wind","speed","all","console","log","render","imgsrc"],"mappings":"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","sourcesContent":["import React from 'react';\n// import { } from 'bootstrap';\nimport '../../assect/css/mycss.css'\n\n// var api_key = f1f66ef328ad5089cd48bdf7d7cb81f6;\n\nclass Weather extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            city: undefined,\n            country: undefined,\n            lon : undefined,\n            lat : undefined,\n            icon: undefined,\n            main: undefined,\n            description: undefined,\n            celsius: undefined,\n            temp_max : undefined,\n            temp_min : undefined,\n            pressure : undefined,\n            humidity : undefined,\n            wind_speed : undefined,\n            visibility : undefined,\n            rain : undefined,\n            clouds : undefined,\n            error : false\n          };\n    }\n\n    calCelsius(temp){\n        let cell = temp - 273.15;\n        return cell\n    }\n\n    componentDidMount(){\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=f1f66ef328ad5089cd48bdf7d7cb81f6`)\n        .then(response => response.json())\n        .then(data => this.setState({\n            city: data.name, \n            country: data.sys.country,\n            lon : data.coord.lon,\n            lat : data.coord.lat,\n            icon: data.weather[0].icon,\n            main: data.weather[0].main,\n            description : data.weather[0].description,\n            celsius : data.main.temp,\n            temp_min : data.main.temp_min,\n            temp_max : data.main.temp_max,\n            pressure : data.main.pressure,\n            humidity : data.main.humidity,\n            visibility : data.visibility,\n            wind_speed : data.wind.speed,\n\n            rain : data.rain[1],\n            clouds : data.clouds.all,\n\n            \n\n        },\n             console.log(data)))\n      }\n\n    render(){\n        const {city, country,lon, lat,  icon , main , description, celsius, temp_max, temp_min, pressure,\n                     humidity, visibility ,wind_speed,rain, clouds, error} = this.state;\n        const imgsrc= `http://openweathermap.org/img/wn/${icon}@2x.png`;\n        return(\n            <div className=\"App\">\n            <header className=\"App-header\">\n              <h1>\n                  { country}\n                  </h1>   \n                  <h4>\n                  { city}\n                  </h4>   \n                  <img src = {imgsrc}/>    \n                <h4>\n                      {celsius} <br /> {description} <br /> {visibility} <br /> {clouds}\n                </h4>       \n            </header>\n          </div>\n        );\n    }\n}\n\nexport default Weather ;\n\n\n// f1f66ef328ad5089cd48bdf7d7cb81f6"]},"metadata":{},"sourceType":"module"}