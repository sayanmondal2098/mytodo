{"version":3,"file":"index.es.js","sources":["../src/publicUtils.js","../src/utils.js","../src/makeDefaultPluginHooks.js","../src/hooks/useColumnVisibility.js","../src/hooks/useTable.js","../src/plugin-hooks/useExpanded.js","../src/filterTypes.js","../src/plugin-hooks/useFilters.js","../src/plugin-hooks/useGlobalFilter.js","../src/aggregations.js","../src/plugin-hooks/useGroupBy.js","../src/sortTypes.js","../src/plugin-hooks/useSortBy.js","../src/plugin-hooks/usePagination.js","../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../src/plugin-hooks/useRowSelect.js","../src/plugin-hooks/useRowState.js","../src/plugin-hooks/useColumnOrder.js","../src/plugin-hooks/useResizeColumns.js","../src/plugin-hooks/useAbsoluteLayout.js","../src/plugin-hooks/useBlockLayout.js","../src/plugin-hooks/useFlexLayout.js"],"sourcesContent":["import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultColumn = {\n  Cell: ({ cell: { value = '' } }) => value,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    !!(() => {\n      let proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isFunctionComponent(component) {\n  return typeof component === 'function'\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    isFunctionComponent(component) ||\n    isExoticComponent(component)\n  )\n}\n","import React from 'react'\nimport { defaultColumn } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\n// Find the depth of the columns\nexport function dedupeBy(arr, fn) {\n  return [...arr]\n    .reverse()\n    .filter((d, i, all) => all.findIndex(dd => fn(dd) === fn(d)) === i)\n    .reverse()\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: () => <>&nbsp;</>,\n    Footer: () => <>&nbsp;</>,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(allColumns, defaultColumn) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = row => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    expandedRows.push(row)\n\n    if (expandSubRows && row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rows.forEach(handleRow)\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n  dedupeBy,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const coreDataModel = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return { rows, flatRows, rowsById }\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  // Allow materialized columns to also access data\n  const [rows, flatRows, rowsById, materializedColumns] = React.useMemo(() => {\n    const { rows, flatRows, rowsById } = coreDataModel\n    const materializedColumns = reduceHooks(\n      getHooks().materializedColumns,\n      [],\n      {\n        instance: getInstance(),\n      }\n    )\n\n    materializedColumns.forEach(d => assignColumnAccessor(d))\n\n    const materializedColumnsQueue = [...materializedColumns]\n\n    while (materializedColumnsQueue.length) {\n      const column = materializedColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById, materializedColumns]\n  }, [\n    coreDataModel,\n    getHooks,\n    getInstance,\n    data,\n    getRowId,\n    getSubRows,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ...reduceHooks(getHooks().materializedColumnsDeps, [], {\n      instance: getInstance(),\n    }),\n  ])\n\n  Object.assign(getInstance(), {\n    rows,\n    flatRows,\n    rowsById,\n    materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Combine new materialized columns with all columns (dedupe prefers later columns)\n  allColumns = React.useMemo(\n    () => dedupeBy([...allColumns, ...materializedColumns], d => d.id),\n    [allColumns, materializedColumns]\n  )\n  getInstance().allColumns = allColumns\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns (dedupe prefers later columns)\n  allColumns = React.useMemo(\n    () => dedupeBy([...allColumns, ...visibleColumns], d => d.id),\n    [allColumns, visibleColumns]\n  )\n  getInstance().allColumns = allColumns\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = getInstance().headerGroups.filter(\n    (headerGroup, i) => {\n      // Filter out any headers and headerGroups that don't have visible columns\n      headerGroup.headers = headerGroup.headers.filter(column => {\n        const recurse = headers =>\n          headers.filter(column => {\n            if (column.headers) {\n              return recurse(column.headers)\n            }\n            return column.isVisible\n          }).length\n        if (column.headers) {\n          return recurse(column.headers)\n        }\n        return column.isVisible\n      })\n\n      // Give headerGroups getRowProps\n      if (headerGroup.headers.length) {\n        headerGroup.getHeaderGroupProps = makePropGetter(\n          getHooks().getHeaderGroupProps,\n          { instance: getInstance(), headerGroup, index: i }\n        )\n\n        headerGroup.getFooterGroupProps = makePropGetter(\n          getHooks().getFooterGroupProps,\n          { instance: getInstance(), headerGroup, index: i }\n        )\n\n        return true\n      }\n\n      return false\n    }\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const cell = {\n          column,\n          row,\n          value: row.values[column.id],\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(originalRow, rowIndex, row)\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows = filteredRows.map(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return row\n        }\n        return {\n          ...row,\n          subRows:\n            row.subRows && row.subRows.length > 0\n              ? filterRows(row.subRows, depth + 1)\n              : row.subRows,\n        }\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport { getFilterMethod, shouldAutoRemoveFilter } from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      return filterMethod(\n        filteredRows,\n        allColumns.map(d => d.id),\n        globalFilterValue\n      ).map(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        return {\n          ...row,\n          subRows:\n            row.subRows && row.subRows.length\n              ? filterRows(row.subRows)\n              : row.subRows,\n        }\n      })\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return (min + max) / 2\n}\n\nexport function unique(values) {\n  return [...new Set(values).values()]\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  defaultGroupByFn,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Get the columnValues to aggregate\n        const groupedValues = groupedRows.map(row => row.values[column.id])\n\n        // Get the columnValues to aggregate\n        const leafValues = leafRows.map(row => {\n          let columnValue = row.values[column.id]\n\n          if (!depth && column.aggregatedValue) {\n            const aggregateValueFn =\n              typeof column.aggregateValue === 'function'\n                ? column.aggregateValue\n                : userAggregations[column.aggregateValue] ||\n                  aggregations[column.aggregateValue]\n\n            if (!aggregateValueFn) {\n              console.info({ column })\n              throw new Error(\n                `React Table: Invalid column.aggregateValue option for column listed above`\n              )\n            }\n\n            columnValue = aggregateValueFn(columnValue, row, column)\n          }\n          return columnValue\n        })\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated = !cell.isGrouped && !cell.isPlaceholder && row.canExpand\n  })\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnId) {\n  return row.values[columnId]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  defaultOrderByFn,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length <= 1) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    toggleSortBy,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n\n    if (newPageIndex < 0 || newPageIndex > pageCount - 1) {\n      return state\n    }\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n    manualGlobalFilter,\n    manualFilters,\n    manualGroupBy,\n    manualSortBy,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    manualGlobalFilter ? null : globalFilter,\n    manualFilters ? null : filters,\n    manualGroupBy ? null : groupBy,\n    manualSortBy ? null : sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () => (pageCount > 0 ? [...new Array(pageCount)].map((d, i) => i) : []),\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage = pageCount === -1 || pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    if (selectAll) {\n      const selectedRowIds = {}\n\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n\n      return {\n        ...state,\n        selectedRowIds,\n      }\n    }\n\n    return {\n      ...state,\n      selectedRowIds: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true } = instance\n\n    // Join the ids of deep rows\n    // to make a key, then manage all of the keys\n    // in a flat object\n    const row = rowsById[id]\n    const isSelected = row.isSelected\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    let newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (!isSelected && shouldExist) {\n          newSelectedRowIds[id] = true\n        } else if (isSelected && !shouldExist) {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && row.subRows) {\n        return row.subRows.forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  if (row.subRows && row.subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    row.subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = originalRow => ({})\nconst defaultInitialCellStateAccessor = originalRow => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row.original) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row.original)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(row.original)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n} from '../publicUtils'\n\nimport { getFirstDefined } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    document.addEventListener(events.moveEvent, events.moveHandler, {\n      passive: false,\n    })\n    document.addEventListener(events.upEvent, events.upHandler, {\n      passive: false,\n    })\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'ew-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width = columnResizing.columnWidths[header.id] || header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance({ plugins }) {\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableBodyProps.push(getTableBodyProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableBodyProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth ? `${column.totalFlexWidth} 0 auto` : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n"],"names":["renderErr","actions","init","defaultColumn","Cell","cell","value","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","defaultOrderByFn","arr","funcs","dirs","sort","rowA","rowB","i","length","sortFn","desc","sortInt","index","defaultGroupByFn","rows","columnId","reduce","prev","row","resKey","values","Array","isArray","push","mergeProps","propList","props","next","style","className","rest","handlePropGetter","prevProps","userProps","meta","makePropGetter","hooks","reduceHooks","initial","allowUndefined","nextValue","process","env","NODE_ENV","console","info","Error","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","pluginIndex","findIndex","plugin","before","beforeIndex","functionalUpdate","updater","old","useGetLatest","obj","ref","React","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","useAsyncDebounce","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","args","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","makeRenderer","instance","column","type","Comp","flexRender","isReactComponent","isClassComponent","component","proto","Object","getPrototypeOf","prototype","isFunctionComponent","isExoticComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","getBy","error","assign","dedupeBy","reverse","filter","d","all","dd","decorateColumn","userDefaultColumn","Footer","makeHeaderGroups","allColumns","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","latestParentColumn","newParent","originalId","placeholderOf","pathObjCache","Map","path","def","cacheKey","JSON","stringify","pathObj","get","makePathArray","set","val","cursor","pathPart","e","getFirstDefined","isFunction","a","key","flat","recurse","expandRows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","isExpanded","original","canExpand","subRows","getFilterMethod","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","reOpenBracket","reCloseBracket","flattenDeep","String","replace","join","newArr","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","should","shouldAll","isMountedRef","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","getInstance","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","useTable","instanceRef","Boolean","data","userColumns","getStateReducer","s","handler","useReducer","undefined","reducerState","useMemo","coreDataModel","flatRows","rowsById","allColumnsQueue","shift","accessRowsForColumn","accessValueHooks","materializedColumnsQueue","visibleColumnsDep","calculateHeaderWidths","totalColumnsMinWidth","totalColumnsWidth","totalColumnsMaxWidth","render","footerGroups","allCells","cells","find","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","header","subHeaders","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRow","originalRow","rowIndex","parentRows","originalSubRows","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","expandAll","keys","rowId","setExpanded","exists","shouldExist","_","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","expandedDepth","findExpandedDepth","preExpandedRows","maxDepth","splitId","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","nonFilteredColumns","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","stateWithoutGlobalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","minMax","average","median","unique","Set","uniqueCount","size","count","emptyArray","emptyObject","resetGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","setGroupBy","resolvedGroupBy","groupByColumns","g","col","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","aggregateRowsToValues","leafRows","groupedRows","groupedValues","leafValues","columnValue","aggregatedValue","aggregateValueFn","aggregateValue","aggregateFn","aggregate","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupUpRecursively","parentId","rowGroupsMap","aggregatedGroupedRows","entries","groupByVal","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","isPlaceholder","isAggregated","reSplitAlphaNumeric","alphanumeric","getRowValueByColumnID","b","toString","aa","bb","an","parseInt","bn","combo","isNaN","datetime","getTime","compareBasic","basic","resetSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","newSortBy","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","sortAction","splice","orderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","newPageIndex","topRowIndex","floor","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","page","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","buildPivotColumns","pivotFilters","pivotColumn","sourceColumn","isPivoted","from","uniqueValue","columnGroup","PivotHeader","isPivotGroup","pivotValue","newMaterialized","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","getAutoResetSelectedRows","allChildrenSelected","someSelected","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headersToResize","getLeafHeaders","headerIdWidths","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","addEventListener","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","deltaX","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","leafHeaders","recurseHeader","cellStyles","top","useAbsoluteLayout","getRowStyles","display","boxSizing","useBlockLayout","useFlexLayout","flex"],"mappings":"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"}